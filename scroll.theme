<?php

use Drupal\Component\Utility\Html;

function scroll_form_system_theme_settings_alter(&$form, \Drupal\Core\Form\FormStateInterface $form_state) {
  
  if(!empty($form_state->getValue(background_type))) {
    $background_type = (int)$form_state->getValue('background_type'); 
  }else{
    $background_type = 0;
  }
  
  //ksm($form);
  $form['scroll'] = array(
    '#type' => 'fieldset',
    '#title' => t('Scroll theme settings'),
    '#collapsible' => FALSE,
  );
  $form['scroll']['fixed'] = array(
    '#type' => 'fieldset',
    '#title' => t('Fixed region'),
    '#collapsible' => FALSE,
  );  
  $form['scroll']['fixed']['background_type'] = array(
    '#type' => 'select',
    '#title' => t('Type of the background'),
    '#options' => array(
      0 => 'Image',
      1 => 'Video',
      2 => 'Slider',
    ),
    '#default_value' => theme_get_setting('background_type'),
    '#ajax' => array(
      'callback' => 'ajax_background_type_callback',
      'wrapper' => 'background-type',
      'effect' => 'fade',
    )
  );
  
  $form['scroll']['fixed']['fixed_background'] = array(
    '#type' => 'fieldset',
    '#title' => t('Background type:'),
    '#prefix' => '<div id = "background-type">',
    '#suffix' => '</div>'
  );  
  
  switch($background_type) {
    case 0:
      $form['scroll']['fixed']['fixed_background']['fixed_image'] = array(
        '#type' => 'managed_file',
        '#title' => t('Background image'),
        '#description' => t('Background image of the Fixed region'),
        '#default_value' => theme_get_setting('fixed_image', 'scroll'),
        '#upload_location' => 'public://',
      );
      break;
    case 1:
      $form['scroll']['fixed']['fixed_background']['fixed_video'] = array(
        '#type' => 'managed_file',
        '#title' => t('Video'),
        '#description' => t('Choose video file for Fixed region'),
        '#default_value' => theme_get_setting('fixed_video', 'scroll'),
        '#upload_location' => 'public://',
      );
      break;
    case 2:
      break;
  }  
  
  /*
   * Generate 5 region details form elements
   */
  for($i=1; $i<=5;$i++) {
    $form["scroll"]["scroll_" . $i] = array(
      '#type' => 'details',
      '#title' => 'Scroll ' . $i . ' Region detailss',
      '#description' => t('Settings for the top of the scroll regions'),
      '#collapsible' => TRUE,
      '#collapsed' => TRUE,
    );
    
    $form['scroll']['scroll_' . $i]['scroll_' . $i . '_height'] = array(
      '#type' => 'textfield',
      '#title' => t('Min Height:'),
      '#description' => t('Type the minimal height of a Scroll ' . $i . ' region.'),
      '#default_value' => theme_get_setting('scroll_' . $i . '_height', 'scroll')
    );
    
    $form['scroll']['scroll_' . $i]['scroll_' . $i . '_image'] = array(
      '#type' => 'managed_file',
      '#title' => t('Scroll ' . $i . ' background image'),
      '#description' => t('Please choose the image for the Scroll' . $i .'region'),
      '#default_value' => theme_get_setting('scroll_' . $i . '_image', 'scroll'),
      '#upload_location' => 'public://',
    );
    
    $form['scroll']['scroll_' . $i]['scroll_' . $i . '_attachment'] = array(
      '#type' => 'radios',
      '#title' => t('Background image attachment'),
      '#options' => array(
        0 => 'scroll',
        1 => 'fixed',
      ),
      '#default_value' =>  theme_get_setting('scroll_' . $i . '_attachment'),
    );

    $form['scroll']['scroll_' . $i]['scroll_' . $i . '_repeat'] = array(
      '#type' => 'radios',
      '#title' => t('Background image repeat'),
      '#options' => array(
        0 => t('No-repeat'),
        1 => t('Repeat'),
        2 => t('Repeat - X'),
        3 => t('Repeat - Y'),
      ),
      '#default_value' => theme_get_setting('scroll_' . $i . '_repeat'),
    );
  }
  // end of region details loop
  
  $filename = drupal_get_path('theme', 'scroll') . '/scroll.theme';
  $form_state->addBuildInfo('files', array($filename));
  // Custom submit to save the file permenant.
  $form['#submit'][] = 'scroll_settings_form_submit';
}

function ajax_background_type_callback(&$form, $form_state) {
  return $form['scroll']['fixed']['fixed_background'];
}

function scroll_settings_form_submit(&$form, \Drupal\Core\Form\FormStateInterface $form_state) {
  $account = \Drupal::currentUser();
  $values = $form_state->getValues();
  
  for($i=1; $i<=5; $i++) {
    // Load the file via file.fid.
    if ($file = \Drupal\file\Entity\File::load($values["scroll_' . $i . '_image"][0])) {
      // Change status to permanent.
      $file->setPermanent();
      $file->save();
      $file_usage = \Drupal::service('file.usage');
      $file_usage->add($file, 'user', 'user', $account->id());
    }
  }
}

function scroll_preprocess_page(&$vars) {
  $theme_path = base_path() . drupal_get_path('theme', 'scroll');
  
  $image_path = array();
  for($i=1; $i<= 5; $i++) {
    $fid = theme_get_setting('scroll_' . $i . '_image', 'scroll');
    $file = \Drupal\file\Entity\File::load($fid[0]);
    if (!empty($file)) {
      $uri = $file->getFileUri();
      $image_path[$i] = file_create_url($uri);
    }
  }

  for($i=1; $i<=5; $i++) {
    if(isset($image_path[$i])) {
      $vars['scroll_' . $i . '_image'] = $image_path[$i];
    }    
  }
  
  $scroll_region_heights = array();
  $image_attachment = array();
  $image_repeat = array();
  
  for($i=1; $i<=5; $i++) {    
    $vars[region_height][$i] = theme_get_setting('scroll_' . $i . '_height', 'scroll');
    //image attachment propertirs for every region background image
    $image_attachment[$i] = theme_get_setting('scroll_' . $i . '_attachment', 'scroll');
    if($image_attachment[$i] == 0) {
      $vars['background_attachment'][$i] = 'scroll';
    }else{
      $vars['background_attachment'][$i] = 'fixed';
    } 
    
    //image repeat properties for every region background image
    $image_repeat[$i] = theme_get_setting('scroll_' . $i . '_repeat', 'scroll');
    switch($image_repeat[$i]) {
      case 0:
        $vars['background_repeat'][$i] = 'no-repeat';
        break;
      case 1:
        $vars['background_repeat'][$i] = 'repeat';
        break;
      case 2:
        $vars['background_repeat'][$i] = 'repeat-x';
        break;
      case 3:
        $vars['background_repeat'][$i] = 'repeat-y';
        break;
    }
  }
}