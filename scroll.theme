<?php
define('CLEAR_BACKGROUND', 0);
define('BACKGROUND_IMAGE', 1);
define('VIDEO_BACKGROUND', 2);
define('SLIDER', 3);

use Drupal\Component\Utility\Html;

function scroll_form_system_theme_settings_alter(&$form, \Drupal\Core\Form\FormStateInterface $form_state) {
  
  $form['scroll'] = array(
    '#type' => 'fieldset',
    '#title' => t('Scroll theme settings'),
    '#collapsible' => FALSE,
  );
  
  //Header form elements
  $form['scroll']['header'] = array(
    '#type' => 'fieldset',
    '#title' => t('Header'),
    '#collapsible' => FALSE,
  ); 
  $form['scroll']['header']['header_bg_color'] = array(
    '#type' => 'textfield',
    '#title' => 'Header background color',
    '#description' => t('If you fill this field it will override the color from Color module! '
        . 'Use decimal as RGBA - example - 255, 128, 201, 0.5'),
    '#default_value' => theme_get_setting('header_bg_color', 'scroll'),
  );
  
  $form['scroll']['header']['scroll_menu'] = array(
    '#type' => 'fieldset',
    '#title' => 'Scroll menu elements',
    '#description' => t('The elements of the top menu scrolling to 5 scroll regions'),
    '#collapsible' => FALSE,
  );
  
  for($i=1; $i<=5; $i++) {
    $form['scroll']['header']['scroll_menu']['menu_'.$i] = array(
      '#type' => 'textfield',
      '#title' => t('Title of '. $i . ' menu element'),
      '#description' => t('This smenu element will scroll to ' . $i . ' region'),
      '#size' => 30,
    );
  }  
  
  // Fixed region form elements
  $form['scroll']['fixed'] = array(
    '#type' => 'fieldset',
    '#title' => t('Fixed region'),
    '#collapsible' => FALSE,
  ); 
  $form['scroll']['fixed']['background_type'] = array(
    '#type' => 'select',
    '#title' => t('Use'),
    '#description' => t('Choose what type of background will use in region Fixed'),
    '#options' => array(
      CLEAR_BACKGROUND => 'None',
      BACKGROUND_IMAGE => 'Image',
      VIDEO_BACKGROUND => 'Video',
      SLIDER => 'Slider',
    ),
    '#default_value' => theme_get_setting('background_type'),    
  );   
   
  $form['scroll']['fixed']['fixed_background'] = array(
    '#type' => 'fieldset',
    '#title' => t('Background type:'),
    '#prefix' => '<div id = "background-type">',
    '#suffix' => '</div>'
  ); 
  
  $form['scroll']['fixed']['fixed_background']['image'] = array(
    '#type' => 'fieldset',
    '#title' => t('Background image'),
  );
  $form['scroll']['fixed']['fixed_background']['image']['fixed_image'] = array(
    '#type' => 'managed_file',
    '#title' => t('Background image'),
    '#description' => t('Background image of the Fixed region'),
    '#default_value' => theme_get_setting('fixed_image', 'scroll'),
    '#upload_location' => 'public://',
    '#upload_validators' => array(
      'file_validate_extensions' => array('jpg png svg jpeg'),
    ),
  );
  
  $form['scroll']['fixed']['fixed_background']['video'] = array(
    '#type' => 'fieldset',
    '#title' => t('Background Video'),
  );
  $form['scroll']['fixed']['fixed_background']['video']['fixed_video'] = array(
    '#type' => 'managed_file',
    '#title' => t('Video'),
    '#description' => t('Choose video file for Fixed region'),
    '#default_value' => theme_get_setting('fixed_video', 'scroll'),
    '#upload_location' => 'public://',
    '#upload_validators' => array(
        'file_validate_extensions' => array('mp4 m4v ogg'),
      )
  );
  
  /*
   * ****************** Slider ******************
   */
  $form['scroll']['fixed']['fixed_background']['slider'] = array(
    '#type' => 'fieldset',
    '#title' => t('Slider components'),
  );    
  /*
   * Generate 5 slider elements
   */
  for($i=1; $i<=5;$i++) {
    $form['scroll']['fixed']['fixed_background']['slider']["slide_" . $i] = array(
      '#type' => 'details',
      '#title' => 'Slide ' . $i . ' Detailss',
      '#collapsible' => TRUE,
      '#collapsed' => TRUE,
    );    
    $form['scroll']['fixed']['fixed_background']['slider']["slide_" . $i]['slide_' . $i . '_image'] = array(
      '#type' => 'managed_file',
      '#title' => t('Slide ' . $i . ' image'),
      '#description' => t('Please choose the image for the Slide' . $i),
      '#default_value' => theme_get_setting('slide_' . $i . '_image'),
      '#upload_location' => 'public://',
      '#upload_validators' => array(
        'file_validate_extensions' => array('gif png jpg jpeg svg'),
      )
    );    
    $form['scroll']['fixed']['fixed_background']['slider']["slide_" . $i]['slide_' . $i . '_title'] = array(
      '#type' => 'textfield',
      '#title' => t('Title of the slide:'),
      '#description' => t('It will be shown on the slide'),
      '#default_value' => theme_get_setting('slide_' . $i . '_title'),
    );     
    $form['scroll']['fixed']['fixed_background']['slider']["slide_" . $i]['slide_' . $i . '_text'] = array(
      '#type' => 'textarea',
      '#title' => t('Text in slider:'),
      '#description' => t('It will be shown under the title'),
      '#default_value' => theme_get_setting('slide_' . $i . '_text'),
    );
  }
  
  
// end of slider details loop  
  
  /*
   * Generate 5 region details form elements
   */
  for($i=1; $i<=5;$i++) {
    $form["scroll"]["scroll_" . $i] = array(
      '#type' => 'details',
      '#title' => 'Scroll ' . $i . ' Region detailss',
      '#description' => t('Settings for the top of the scroll regions'),
      '#collapsible' => TRUE,
      '#collapsed' => TRUE,
    );
    
    $form['scroll']['scroll_' . $i]['scroll_' . $i . '_height'] = array(
      '#type' => 'textfield',
      '#title' => t('Min Height:'),
      '#description' => t('Type the minimal height of a Scroll ' . $i . ' region.'),
      '#default_value' => theme_get_setting('scroll_' . $i . '_height', 'scroll')
    );
    
    $form['scroll']['scroll_' . $i]['scroll_' . $i . '_image'] = array(
      '#type' => 'managed_file',
      '#title' => t('Scroll ' . $i . ' background image'),
      '#description' => t('Please choose the image for the Scroll' . $i .'region'),
      '#default_value' => theme_get_setting('scroll_' . $i . '_image', 'scroll'),
      '#upload_location' => 'public://',
      '#upload_validators' => array(
        'file_validate_extensions' => array('gif png jpg jpeg svg'),
      )
    );
    
    $form['scroll']['scroll_' . $i]['scroll_' . $i . '_attachment'] = array(
      '#type' => 'radios',
      '#title' => t('Background image attachment'),
      '#options' => array(
        0 => 'scroll',
        1 => 'fixed',
      ),
      '#default_value' =>  theme_get_setting('scroll_' . $i . '_attachment'),
    );

    $form['scroll']['scroll_' . $i]['scroll_' . $i . '_repeat'] = array(
      '#type' => 'radios',
      '#title' => t('Background image repeat'),
      '#options' => array(
        0 => t('No-repeat'),
        1 => t('Repeat'),
        2 => t('Repeat - X'),
        3 => t('Repeat - Y'),
      ),
      '#default_value' => theme_get_setting('scroll_' . $i . '_repeat'),
    );
  }
  // end of region details loop
  
  /*
   * Articles section info
   */
  
  $form['scroll']['articles'] = array(
    '#type' => 'details',
    '#title' => t('Articles section'),
    '#collapsible' => TRUE,
    '#collapsed' => TRUE,
  );
  
  $form['scroll']['articles']['articles_title_animation'] = array(
    '#type' => 'select',
    '#title' => 'Title animation',
    '#description' => t('Choose animation for articles section title'),
    '#options' => array(
      '' => 'none',
      'fade_in' => 'fade_in',
      'fade_in_left' => 'fade_in_left',
      'fade_in_right' => 'fade_in_right',
      'fade_in_down' => 'fade_in_down',
      'fade_in_up' => 'fade_in_up',
      'zoom_in' => 'zoom_in',
      'zoom_in_left' => 'zoom_in_left',
      'zoom_in_right' => 'zoom_in_right',
      'zoom_in_down' => 'zoom_in_down',
      'zoom_in_up' => 'zoom_in_up',
      'roll_in' => 'roll_in',
    ),
    '#default_value' => theme_get_setting('articles_title_animation', 'scroll'),
  );
  
  $form['scroll']['articles']['articles_section_animation'] = array(
    '#type' => 'select',
    '#title' => 'Title animation',
    '#description' => t('Choose animation for articles section title'),
    '#options' => array(
      '' => 'none',
      'fade_in' => 'fade_in',
      'fade_in_left' => 'fade_in_left',
      'fade_in_right' => 'fade_in_right',
      'fade_in_down' => 'fade_in_down',
      'fade_in_up' => 'fade_in_up',
      'zoom_in' => 'zoom_in',
      'zoom_in_left' => 'zoom_in_left',
      'zoom_in_right' => 'zoom_in_right',
      'zoom_in_down' => 'zoom_in_down',
      'zoom_in_up' => 'zoom_in_up',
      'roll_in' => 'roll_in',
    ),
    '#default_value' => theme_get_setting('articles_section_animation', 'scroll'),
  );
  
  $form['scroll']['articles']['articles_include'] = array(
    '#type' => 'checkbox',
    '#title' => t('Show default data'),
    '#description' => t('Check ON if you want to show the ARTICLES data from the theme'),
    '#default_value' => TRUE,
  );
  
  $form['scroll']['articles']['articles_section_title'] = array(
    '#type' => 'textfield',
    '#title' => t('Title'),
    '#description' => t('Type the title of the Articles section'),
    '#default_value' => theme_get_setting('articles_setcion_title', 'scroll'),
  );
  
  $form['scroll']['articles']['articles_section_description'] = array(
    '#type' => 'textarea',
    '#title' => t('Description'),
    '#description' => t('The additional text below the title of the Articles section'),
    '#default_value' => theme_get_setting('articles_setcion_description', 'scroll'),
  );
  
  for($i=1; $i<=4; $i++) {
    $form['scroll']['articles']['article' . $i] = array(
      '#type' => 'details',
      '#title' => t('Article ' . $i),
      '#collapsible' => TRUE,
      '#collapsed' => FALSE,
    );
    
    $form['scroll']['articles']['article' . $i]['article_picture_' . $i] = array(
      '#type' => 'managed_file',
      '#title' => t('Article picture'),
      '#default_value' => theme_get_setting('article_picture_' . $i, 'scroll'),
      '#upload_location' => 'public://',
      '#upload_validators' => array(
        'file_validate_extensions' => array('gif png jpg jpeg svg'),
      ),
    );
    
    $form['scroll']['articles']['article' . $i]['article_title_' . $i] = array(
      '#type' => 'textfield',
      '#title' => t('Article Title'),
      '#default_value' => theme_get_setting('article_title_' . $i, 'scroll'),
    );
    
    $form['scroll']['articles']['article' . $i]['article_details_' . $i] = array(
      '#type' => 'textarea',
      '#title' => t('Article details'),
      '#default_value' => theme_get_setting('article_details_' . $i, 'scroll'),
    );
    
    $form['scroll']['articles']['article' . $i]['article_url_' . $i] = array(
      '#type' => 'textfield',
      '#title'=> t('Article URL'),
      '#default_value' => theme_get_setting('article_url_' . $i, 'scroll'),
    );
  }
  //end of articles section
  
  /*
   * Team section info
   */
  
  $form['scroll']['team'] = array(
    '#type' => 'details',
    '#title' => t('Team section'),
    '#collapsible' => TRUE,
    '#collapsed' => TRUE,
  );
  
  $form['scroll']['team']['team_include'] = array(
    '#type' => 'checkbox',
    '#title' => t('Show default data'),
    '#description' => t('Check ON if you want to show the TEAM data from the theme'),
    '#default_value' => TRUE,
  );
  
  $form['scroll']['team']['members_title_animation'] = array(
    '#type' => 'select',
    '#title' => 'Title animation',
    '#description' => t('Choose animation for members section title'),
    '#options' => array(
      '' => 'none',
      'fade_in' => 'fade_in',
      'fade_in_left' => 'fade_in_left',
      'fade_in_right' => 'fade_in_right',
      'fade_in_down' => 'fade_in_down',
      'fade_in_up' => 'fade_in_up',
      'zoom_in' => 'zoom_in',
      'zoom_in_left' => 'zoom_in_left',
      'zoom_in_right' => 'zoom_in_right',
      'zoom_in_down' => 'zoom_in_down',
      'zoom_in_up' => 'zoom_in_up',
      'roll_in' => 'roll_in',
    ),
    '#default_value' => theme_get_setting('members_title_animation', 'scroll'),
  );
  
  $form['scroll']['team']['members_section_animation'] = array(
    '#type' => 'select',
    '#title' => 'Title animation',
    '#description' => t('Choose animation for members section'),
    '#options' => array(
      '' => 'none',
      'fade_in' => 'fade_in',
      'fade_in_left' => 'fade_in_left',
      'fade_in_right' => 'fade_in_right',
      'fade_in_down' => 'fade_in_down',
      'fade_in_up' => 'fade_in_up',
      'zoom_in' => 'zoom_in',
      'zoom_in_left' => 'zoom_in_left',
      'zoom_in_right' => 'zoom_in_right',
      'zoom_in_down' => 'zoom_in_down',
      'zoom_in_up' => 'zoom_in_up',
      'roll_in' => 'roll_in',
    ),
    '#default_value' => theme_get_setting('members_section_animation', 'scroll'),
  );
  
  for($i=1; $i<=4; $i++) {
    $form['scroll']['team']['member' . $i] = array(
      '#type' => 'fieldset',
      '#title' => t('Member ' . $i),
      '#collapsible' => TRUE,
      '#collapsed' => FALSE,
    );
    
    $form['scroll']['team']['member' . $i]['member_picture_' . $i] = array(
      '#type' => 'managed_file',
      '#title' => t('Member picture'),
      '#default_value' => theme_get_setting('member_picture_' . $i, 'scroll'),
      '#upload_location' => 'public://',
      '#upload_validators' => array(
        'file_validate_extensions' => array('gif png jpg jpeg svg'),
      ),
    );
    
    $form['scroll']['team']['member' . $i]['member_title_' . $i] = array(
      '#type' => 'textfield',
      '#title' => t('Title'),
      '#default_value' => theme_get_setting('member_title_' . $i, 'scroll'),
    );
    
    $form['scroll']['team']['member' . $i]['member_details_' . $i] = array(
      '#type' => 'textarea',
      '#title' => t('Member details'),
      '#default_value' => theme_get_setting('member_details_' . $i, 'scroll'),
    );
  }
  //end of team section
  
  $filename = drupal_get_path('theme', 'scroll') . '/scroll.theme';
  $form_state->addBuildInfo('files', array($filename));
  // Custom submit to save the file permenant.
  $form['#submit'][] = 'scroll_settings_form_submit';
}


function scroll_settings_form_submit(&$form, \Drupal\Core\Form\FormStateInterface $form_state) {
  $account = \Drupal::currentUser();
  $values = $form_state->getValues();
  
  //Change status of the uploaded images to permanent
  
  //Fixed region image
  if ($file = \Drupal\file\Entity\File::load($values["fixed_image"][0])) {
    // Change status to permanent.
    $file->setPermanent();
    $file->save();
    $file_usage = \Drupal::service('file.usage');
    $file_usage->add($file, 'user', 'user', $account->id());
  }
  
  //Fixed region video
  if ($file = \Drupal\file\Entity\File::load($values["fixed_video"][0])) {
    // Change status to permanent.
    $file->setPermanent();
    $file->save();
    $file_usage = \Drupal::service('file.usage');
    $file_usage->add($file, 'user', 'user', $account->id());
  }
  
  //Scroll 1..5 background images
  for($i=1; $i<=5; $i++) {
    // Load the file via file.fid.
    if ($file = \Drupal\file\Entity\File::load($values["scroll_" . $i . "_image"][0])) {
      // Change status to permanent.
      $file->setPermanent();
      $file->save();
      $file_usage = \Drupal::service('file.usage');
      $file_usage->add($file, 'user', 'user', $account->id());
    }
  }
  
  //Slides 1..5 images
  for($i=1; $i<=5; $i++) {
    // Load the file via file.fid.
    if ($file = \Drupal\file\Entity\File::load($values["slide_" . $i . "_image"][0])) {
      // Change status to permanent.
      $file->setPermanent();
      $file->save();
      $file_usage = \Drupal::service('file.usage');
      $file_usage->add($file, 'user', 'user', $account->id());
    }
  }
  
  //Articles 1..4 images
  for($i=1; $i<=4; $i++) {
    // Load the file via file.fid.
    if ($file = \Drupal\file\Entity\File::load($values["article_picture_" . $i][0])) {
      // Change status to permanent.
      $file->setPermanent();
      $file->save();
      $file_usage = \Drupal::service('file.usage');
      $file_usage->add($file, 'user', 'user', $account->id());
    }
  }
  
  //Member 1..4 images
  for($i=1; $i<=4; $i++) {
    // Load the file via file.fid.
    if ($file = \Drupal\file\Entity\File::load($values["member_picture_" . $i][0])) {
      // Change status to permanent.
      $file->setPermanent();
      $file->save();
      $file_usage = \Drupal::service('file.usage');
      $file_usage->add($file, 'user', 'user', $account->id());
    }
  }
}

function scroll_preprocess_page(&$vars) {
  $theme_path = base_path() . drupal_get_path('theme', 'scroll');
  
  //Background images for scroll regions
  $image_path = array();
  for($i=1; $i<= 5; $i++) {
    $fid = theme_get_setting('scroll_' . $i . '_image', 'scroll');
    $file = \Drupal\file\Entity\File::load($fid[0]);
    if (!empty($file)) {
      $uri = $file->getFileUri();
      $image_path[$i] = file_create_url($uri);
    }
  }

  for($i=1; $i<=5; $i++) {
    if(isset($image_path[$i])) {
      $vars['scroll_' . $i . '_image'] = $image_path[$i];
    }    
  }
  
  // Set slider template variables to use with TWIG
  $image_path = array();
  for($i=1; $i<= 5; $i++) {
    $fid = theme_get_setting('slide_' . $i . '_image', 'scroll');
    $file = \Drupal\file\Entity\File::load($fid[0]);
    if (!empty($file)) {
      $uri = $file->getFileUri();
      $image_path[$i] = file_create_url($uri);
    }
  }

  for($i=1; $i<=5; $i++) {
    if(isset($image_path[$i])) {
      $vars['slide_' . $i . '_image'] = $image_path[$i];
    }
      $vars['slide_' . $i . '_title'] = theme_get_setting('slide_' . $i . '_title');   
      $vars['slide_' . $i . '_text'] = theme_get_setting('slide_' . $i . '_text');
  }
  
  
  $scroll_region_heights = array();
  $image_attachment = array();
  $image_repeat = array();
  
  $fid = theme_get_setting('fixed_video', 'scroll');
  $file = \Drupal\file\Entity\File::load($fid[0]);
  if (!empty($file)) {
    $uri = $file->getFileUri();
    $fixed_video = file_create_url($uri);
  }
  
  $fid = theme_get_setting('fixed_image', 'scroll');
  $file = \Drupal\file\Entity\File::load($fid[0]);
  if (!empty($file)) {
    $uri = $file->getFileUri();
    $fixed_image = file_create_url($uri);
  }
  
  //set header background color
  $vars['header_bg_color'] = theme_get_setting('header_bg_color', 'scroll');
  
  //set region Fixed background
  $vars['fixed_video'] = $fixed_video;    
  $vars['fixed_image'] = $fixed_image;
  $vars['background_type'] = theme_get_setting('background_type', 'scroll');
    
  //set scroll regions backgrounds
  for($i=1; $i<=5; $i++) {    
    $vars[region_height][$i] = theme_get_setting('scroll_' . $i . '_height', 'scroll');
    //image attachment propertirs for every region background image
    $image_attachment[$i] = theme_get_setting('scroll_' . $i . '_attachment', 'scroll');
    if($image_attachment[$i] == 0) {
      $vars['background_attachment'][$i] = 'scroll';
    }else{
      $vars['background_attachment'][$i] = 'fixed';
    } 
    
    //image repeat properties for every region background image
    $image_repeat[$i] = theme_get_setting('scroll_' . $i . '_repeat', 'scroll');
    switch($image_repeat[$i]) {
      case 0:
        $vars['background_repeat'][$i] = 'no-repeat';
        break;
      case 1:
        $vars['background_repeat'][$i] = 'repeat';
        break;
      case 2:
        $vars['background_repeat'][$i] = 'repeat-x';
        break;
      case 3:
        $vars['background_repeat'][$i] = 'repeat-y';
        break;
    }   
  }

  //set articles section details
  $vars['articles_section_title'] = theme_get_setting('articles_section_title', 'scroll');
  $vars['articles_section_description'] = theme_get_setting('articles_section_description', 'scroll');
  
  for($i=1; $i<= 4; $i++) {
    $fid = theme_get_setting('article_picture_' . $i, 'scroll');
    $file = \Drupal\file\Entity\File::load($fid[0]);
    if (!empty($file)) {
      $uri = $file->getFileUri();
      $vars['article_picture_' . $i] = file_create_url($uri);
    }
    
    $vars['articles_include'] = theme_get_setting('articles_include', 'scroll');
    $vars['articles_title_animation'] = theme_get_setting('articles_title_animation', scroll);
    $vars['articles_section_animation'] = theme_get_setting('articles_section_animation', 'scroll');
    $vars['article_title_' . $i] = theme_get_setting('article_title_' . $i, 'scroll');
    $vars['article_details_' . $i] = theme_get_setting('article_details_' . $i, 'scroll');
    $vars['article_url_' . $i] = theme_get_setting('article_url_' . $i, 'scroll');    
  }
  
  //set member section details
  for($i=1; $i<= 4; $i++) {
    $fid = theme_get_setting('member_picture_' . $i, 'scroll');
    $file = \Drupal\file\Entity\File::load($fid[0]);
    if (!empty($file)) {
      $uri = $file->getFileUri();
      $vars['member_picture_' . $i] = file_create_url($uri);
    }
    
    $vars['team_include'] = theme_get_setting('team_include', 'scroll');
    $vars['members_title_animation'] = theme_get_setting('members_title_animation', 'scroll');
    $vars['members_section_animation'] = theme_get_setting('members_section_animation', 'scroll');    
    $vars['member_title_' . $i] = theme_get_setting('member_title_' . $i, 'scroll');
    $vars['member_details_' . $i] = theme_get_setting('member_details_' . $i, 'scroll');
  }
  
}


function scroll_form_alter(&$form, &$form_state, $form_id) {
  if($form_id == 'webform_submission_contact_us_add_form') {
    $form['#attributes']['class'][] = 'george_form';
    $form['elements']['name']['#attributes']['class'][] = 'fade_in_left';
    $form['elements']['email']['#attributes']['class'][] = 'fade_in_right';
    $form['elements']['message']['#attributes']['class'][] = 'row';
    $form['elements']['message']['#attributes']['class'][] = 'fade_in_up';
  }
}
